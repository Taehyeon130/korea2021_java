/*자료형*/

class  TypeTest1{
	public static void main(String[] args){
		byte b=5; //1byte 숫자형
		short s = 8; //2byte 숫자형
		//s=b; // 오류나지 않음
		//b=s; //오류가 남 //큰 -> 작은 들어가려니 데이터의 손실 발생

		short s1 = 8;
		short s2 = 9;

//---------------------------------------------------------------------------
		/*고전적인 C언어를 포함하여 현대의 컴퓨터 언어에 이르기까지 
		정수의 연산은 int를 기준으로 최적화되어 있기 때문에 연산시 int이하의 자료형들은
		컴파일러에 의해 자동으로 자료형을 int형으로 변환해버린다.
		이러한 현상을 개발자에 의해서가 아니라 시스템에 의한 형변환이므로 '자동형변환'이라한다
		참고) 왜 int 이하만 ? >> 손실을 발생시키며서까지 속도를 올릴 이유는 없음
		*/
		//short result = s1+s2; //에러 남 >>>  +연산을 수행하기 전에 시스템이 s1,s2를 int로 변환한 후 연산을 수행한다!!
		//에러가 나지 않게 하는 법?
		//1) short result를 int result로 선언
		//2) 개발자가 손실을 감안하고 그대로 밀어붙임 >> 강제형변환, 이때 소괄호를 cast 연산자라 한다.
		short result = (short)(s1+s2);


//---------------------------------------------------------------------------
		long x=65;
		int k=78;
		 //컴파일러가 연산을 수행할 때는 연산대상이 되는 데이터는 무조건 같은 자료형으로 수평을 맞추고 수행함
		//이때 데이터 손실이 발생하지 않도록 큰자료형을 기준으로 형변환된다!!
		//int result2 = x+k; //오류 발생
		//long result2 = x+k;
		//int result2 = (int)(x+k);//강제 형변환


	}
}
